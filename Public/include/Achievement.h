////////////////////////////////////////////////////////////
//
// Achievement.h
//
// Uses Achievement.cpp
//
////////////////////////////////////////////////////////////
#ifndef ACHIEVEMENT_H
#define ACHIEVEMENT_H

#include <iostream>
#include <string>


using namespace std;



class Achievement
{
public:
	////////////////////////////////////////////////////////////
	/// \brief Default Constructor
	/// Creates an empty acheivement
	////////////////////////////////////////////////////////////
	Achievement();
	////////////////////////////////////////////////////////////
	/// \brief Overloaded Constructor 
	/// Creates an achievement with a name
	///
	/// \param sName string Name of the achievement
	////////////////////////////////////////////////////////////
	Achievement(string sName);
	////////////////////////////////////////////////////////////
	/// \brief Overloaded Constructor 
	/// Creates an achievement with a name and a description
	///
	/// \param sName string Name of the achievement
	/// \param sDescription string A decription of the acheivement
	////////////////////////////////////////////////////////////
	Achievement(string sName, string sDescription);
	////////////////////////////////////////////////////////////
	/// \brief Overloaded Constructor 
	/// Creates an achievement with a name , description , and its unlock state
	///
	/// \param sName string Name of the achievement
	/// \param sDescription string A decription of the acheivement
	/// \param unlocked bool true or false of whether the acheivement has been unlocked
	////////////////////////////////////////////////////////////
	Achievement(string sName, string sDescription,bool unlocked);

	////////////////////////////////////////////////////////////
	/// \brief get name of achievement
	/// Returnes the member m_sName
	////////////////////////////////////////////////////////////
	string getName();
	////////////////////////////////////////////////////////////
	/// \brief get description of the acheivement
	/// Returnes the member m_sDescription
	////////////////////////////////////////////////////////////
	string getDescription();
	////////////////////////////////////////////////////////////
	/// \brief get the unlock state of the achievement
	/// Returnes the member m_bUnlock
	////////////////////////////////////////////////////////////
	bool getUnlocked();

	////////////////////////////////////////////////////////////
	/// \brief set the name of the Acheivment
	///
	/// \param sName string Name of the achievement
	////////////////////////////////////////////////////////////
	void setName(string sName);
	////////////////////////////////////////////////////////////
	/// \brief set the description of the Acheivment
	///
	/// \param sDescription string A decription of the acheivement
	////////////////////////////////////////////////////////////
	void setDescription(string sDescription);

	////////////////////////////////////////////////////////////
	/// \brief set the unlock state of the achievement
	///
	/// \param unlocked bool true or false of whether the acheivement has been unlocked
	////////////////////////////////////////////////////////////
	void setUnlocked(bool unlocked);

private:
	///////////////////////////////////////////////////////////
	/// \brief String for name of acievement
	////////////////////////////////////////////////////////////
	string m_sName;
	///////////////////////////////////////////////////////////
	/// \brief String for description of acheivement
	////////////////////////////////////////////////////////////
	string m_sDescription;
	///////////////////////////////////////////////////////////
	/// \brief Bool for whether unlocked or not
	////////////////////////////////////////////////////////////
	bool m_bUnlocked;


};

#endif

////////////////////////////////////////////////////////////
/// \class Achievement.h
///
/// Achievement is an object class that hols information about an objective a playermay complete
///
/// Achievements should be created by the game. and profile classes should utilise them
///
/// It contains get and set functions that allow a name , description and unlock state of an achievement
///
/// Usage example:
/// \code
/// 
///
/// if(level.bComplete == true)
/// {
///		 achievements.pushback(new Achievement("Pass Level" , "Complete your first level", true);
///
///	}
/// 
/// \endcode
///
////////////////////////////////////////////////////////////
